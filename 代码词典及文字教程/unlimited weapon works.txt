作者moderKenosis

如果说有什么“mod秘籍”，那么就是这张玩意了。黑线表示入门者了解的系统，红线表示一般中手了解的水平，绿线为冷门知识，蓝线表示可以自我增殖
为了方便，粒子和粒子系统都写为粒子，在运用上还是有所区分
另注：碎片和动画其实是同质的，但是性能还是有所不同。一般能用SHP动画的地方就能用碎片
注2：单位爆炸产生的SHP碎片是不可自由任意修改的，不计算在此系统内
注3：碎片最基本的特征是Bouncer=yes，碎片引用的方法基本只有trailer四句。很多时候你需要许多步跳板来达到最终目的

关于UWW的详解说明
UWW是高阶效果的实现方式线路图。这个体系已经不是新手期代码意思都不懂的阶段了，所以本文并不适合新手阅读。从“熟练”的中手进入高手期，你已经开始创造出原版不存在的特效。这时候，创意的重要性才体现出来。此外，即使你看过本文，如果你没有大量的亲身实践经验，无法了解此图谱中各个部件的特征，（如开火动画跟随单位，碎片分散的大体形状呈方形）则本文的思路对你是没有意义的。这些实践经验是中手成长的必要条件。

创作新特效的第一步是“效果想象”。在现有的基础上，设想一个创意的视觉效果。注意，仅仅是视觉效果。例如“铁锤的吸血光束”，就是“发出一道电磁波，吸取敌人生命值”
第二步，效果拆解。将想象中的效果拆分成多个用mod术语描述的基础原理。很显然，基础原理是不存在“吸血”的。于是，上述的视效可以拆解为“武器使用电磁波特效，给敌人正伤害并同时给自己带来负伤害”。
第三步，代码思路设计。参考UWW图表，可得开火动画引起伤害，武器攻击本身引起伤害。将开火动画分配负伤害作用于自己，常规伤害作用于敌人，即可。这一步最最困难，如果对各部件特征的巧用毫无概念，是不可能设计出思路的。

最后，根据代码设计写出具体代码。
可见，到了这个地步，必须完全将自己的思维和普通玩家区分开。必须所见一切皆原理。而且，创作之前，代码系统已经架构好，最后只不过是把代码写出来能用而已。

→→→→→→→→→→→→→→→→
黑线
单位→武器
单位开火，无甚可说

单位→动画
单位死亡的爆炸动画，对于新手而言不是武器
建筑的工作动画，可以作为碎片武器的跳板

武器→伤害
普通的武器攻击，无甚可说

弹头→动画
弹头动画，无甚可说

→→→→→→→→→→→→→→→→
红线
武器→粒子
调用粒子系统的武器，关键代码
IsRailgun=true
或UseFireParticles=yes
或UseSparkParticles=yes
以及AttachedParticleSystem=粒子系统名

动画→粒子
在ART中添加
SpawnsParticle=粒子名
NumParticles=数字

弹头→碎片
在弹头里添加
MinDebris=数字
MaxDebris=数字（默认的SHP碎片，metallic）

如果要调用VXL碎片，则加入如下代码
DebrisTypes=VXL碎片名
DebrisMaximums=数字 （这句不影响碎片数目，但是没有这句就会IE）

动画→伤害
在ART里添加Damage，每帧都造成如此的伤害

动画→弹头
NPext环境下的Warhead，只计算比例和粒子，弹头动画在此弹头用于另一动画时无效

粒子→伤害
在Gas或Fire型粒子里写Damage和warhead，Smoke型粒子无法添加伤害

武器→动画
Anim=动画名，武器的开火动画，对于新手来说不存在考虑进武器的意义,只有中手才会使用它作为跳板。特征是追随单位移动，可以挂载伤害和粒子，可以用trailer代码挂碎片和其他动画

抛射体→武器
Airburst=yes，AirburstWeapon=武器名，NPext环境下Cluster=数字，Ares下的AirburstSpread
或
ShrapnelWeapon=武器名
ShrapnelCount=数字

碎片→弹头
碎片里写弹头的主要意义是控制伤害和调用粒子系统

单位→overlay
最基本的形式就是围墙。围墙看似是建筑但是在art里有一句ToOverlay，即是变成围墙覆盖物。

→→→→→→→→→→→→→→→→
绿线
抛射体→碎片
Trailer=动画或碎片名，SpawnDelay=数字

抛射体→动画
Trailer=动画或碎片名，SpawnDelay=数字

动画可以作为抛射体，发射出去后可以播放
在ART中添加
AnimLow=数字
AnimHigh=数字
AnimRate=数字
AnimPalette=yes

碎片→伤害
Damage，Warhead

碎片→动画
TrailerAnim=动画或碎片名，TrailerSeperation=数字
以及ExpireAnim=动画或碎片名，如果强制碎片next为动画，此动画将被碎片化

动画→碎片
TrailerAnim=动画或碎片名，TrailerSeperation=数字

动画→单位(只能变步兵)
基因突变，全局的AnimToInfantry可以写多个，动画的MakeInfantry写序号

粒子→动画
粒子Image，粒子并不能真的作为动画，而是作为视觉效果

单位→碎片
单位爆炸产生VXL碎片
VXL碎片中ShareSource=VXL单位名
单位中DebrisTypes=VXL碎片名
DebrisMaximums=数字
DebrisMinimums=数字

飞行器类单位也可以使用trailer的4句代码

弹头→粒子
弹头中Particle=粒子系统名

单位→地形
在建筑里加入ToTile，填地形名，如Water01，Green01，注意如果想让此物在水面建造的话需要LaserFencePost=yes。因为过于冷僻，而且无法计入UWW系统，在图上不予表现

Overlay→粒子
BarrelParticle=，填粒子系统的名字，用于带有Explodes=yes的overlay被引爆时播放，可以仅仅是视觉效果也可以是带有伤害的毒气粒子

Overlay→伤害
伤害数值AmmoCrateDamage=，伤害弹头锁定为C4Warhead=后填写的弹头

Overlay→动画
BarrelExplode=，爆炸动画
OreTwinkle=，矿石闪光动画以及配套的OreTwinkleChance

碎片→Overlay
TiberiumSpawnType=，这是仅仅用于碎片的代码。ToOverlay仅适合建筑物。
并不一定填写矿石overlay。理论上此物可以填写一切overlaytypes里注册的物体。值得注意的是并不仅仅产生moder指定的overlay类型，会按照某内置规则（内容不详）产生就近的若干种不同overlay。所以最好复制若干个，注册在一起，这样就可以刷出“同类”overlay了。

→→→→→→→→→→→→→→→→
蓝线
粒子的NextParticle
动画的Next和trailer

SHP碎片的Next和
Spawns=SHP碎片名
SpawnCount=数字
→→→→→→→→→→→→→→→→
另外，Ares实现了动画产生武器。

那么，这图表的使用方式？
比如单位→动画→碎片→伤害，罗根炸弹
单位→武器→抛射体→武器→伤害，多重弹头，见NPEXT说明书Ares说明书
单位→武器→弹头→动画→碎片→伤害，酸雨武器


